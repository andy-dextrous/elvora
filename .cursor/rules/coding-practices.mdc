---
description: 
globs: 
alwaysApply: true
---
# Rules to Follow When Writing All Application Code

## Packages & Libraries
- TypeScript: [tsconfig.json](mdc:tsconfig.json) has specific rules set. Try to write code that abides by these rules.

## Styling & Code Organisation
  - Keep the codebase clean and organised.
  - ALWAYS keep your coding choices consistent with the rest of the application. For any given task, check to see if similar elements or patterns have been used in the app to use as an example of how styles are applied, which components are used where etc. Your job is fit into this repo in every way - seamlessly adding code that looks and feels like the rest of the repo.

## Comments in code:
  - In large files and components, use comments in the below format ABOVE key functions or groups of functions. The rule of thumb is that you want to keep things logically separated
    
    ```typescript
    /*************************************************************/
    /* FUNCTION NAME
    /*************************************************************/
    function ...
    ```
  - Do not add ANY comments throughout your code unless asked to or unless in the format above to break up large files

## Coding Preferences
  - Always prefer simple solutions
  - Always look within the existing repo for things you might need first, before trying a library. Look in package.json, look in the utilities folder, look in hooks. 
  - STRICTLY keep changes limited to what’s requested or what is clearly understood and relevant.
  - Avoid major changes to feature patterns/architecture unless explicitly instructed.
  - If you need more details about what I want, ask directly. Do not assume.
  - Before creating a new file or adding functionality, confirm it doesn’t already exist in the repo.
  - Do not attempt to commit to Git.
  - Do not write your own SVGs. Lucide Icons and React Icons are installed. If you want an icon, import it from one of these libraries.


## Style choices

- Where possible, attempt to use tailwind styles in the exact same way as they are in other, similar parts of the app. For instance, if you add buttons or inputs or selects of your own, always check to see how these are ALREADY styled in the app.
- Always aim for consistency


