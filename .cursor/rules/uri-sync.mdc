---
description: When asked to work on the uri sync strategy. Or even if the user asks to work on the next phase of "the build" or "the tasklist" they mean this.
globs:
alwaysApply: false
---
---
description: When asked to work on the uri sync strategy. Or even if the user asks to work on the next phase of "the build" or "the tasklist" they mean this.
globs:
alwaysApply: false
---

Iterate with me in a back and forth manner, acting as my developer assistant. We will build this plan together but I'd like you to consult with me before undertaking any new tasks. The plan is solid but still needs work as we move through it.

You should know that the tasklist you are looking at is the tip of an iceberg of planning. There is a primary doc that spells out the entire uri sync strategy and all of its modules. When you start a task you should read the doc FULLY and especially focus on how the current module you are working on itegrates with the whole. This is especially important because the system is designed to work together.

## Docs to study
[URI-SYNC-STRATEGY.md](mdc:URI-SYNC-STRATEGY.md)

## Rules
- Work part by part. Each phase is broken into parts with a title and tasklist. Consult me on the parts and be sure to mark the document with its status.
- Before you start building, make sure you familiarise yourself with the parts that have already been completed, to stay on top of the work as a whole.
- Stay focused on what is next to do according to the plan. You are welcome to suggest edits to how we proceed but always look ahead to the whole plan to make sure you are not jumping ahead.
- As we build, I really only want to add the parts that are necessary at the current moment in time. So if part of a phase seems to be redundant for now, feel free to suggest we push it back to a later phase.
- You might see example code with lots of inline comments that explain stuff within functions etc. I don't like this. Pay attention to my coding rules please and even if you see rules being broken in the tasklist or overview docs, make sure you adjust it to abide.
- The dev server is ALWAYS running. No need to attempt to start it
- Do NOT try to build the site. Always ask me
- Remember that we are making this system DYNAMIC for all cached collections using the isFrontendCollection hook. Make sure you brush up on this system firt. DO NOT hard code collection slug logic - "pages" are different because they are like pages in wordpress. But every other frontend collection is essentiall a custom post type.
- Mark teh document as you go. BE SURE that you add statuses to the document.
- Remember that for ANY data fetching patterns from Payload, there is an established pattern throughut teh app which uses teh global cache.ts module. cache.getByURI or cache.getByID etc.
